/**
 * TypeScript definitions and implementation for Another Package
 */

export interface PackageInfo {
  name: string;
  version: string;
  timestamp: string;
}

export interface ProcessingOptions {
  sortOrder?: 'asc' | 'desc';
  caseSensitive?: boolean;
}

export class AnotherPackage {
  public readonly name: string;
  public readonly version: string;

  constructor(name: string = 'another-package') {
    this.name = name;
    this.version = '2.1.0';
  }

  /**
   * Get a greeting message from the package
   */
  getMessage(): string {
    return `Greetings from ${this.name}`;
  }

  /**
   * Process an array by removing duplicates and sorting
   */
  processArray<T>(arr: T[], options: ProcessingOptions = {}): T[] {
    const { sortOrder = 'asc' } = options;
    const unique = [...new Set(arr)];
    
    return unique.sort((a, b) => {
      if (sortOrder === 'desc') {
        return a > b ? -1 : a < b ? 1 : 0;
      }
      return a < b ? -1 : a > b ? 1 : 0;
    });
  }

  /**
   * Get package information
   */
  getInfo(): PackageInfo {
    return {
      name: this.name,
      version: this.version,
      timestamp: new Date().toISOString()
    };
  }
}

export default AnotherPackage;